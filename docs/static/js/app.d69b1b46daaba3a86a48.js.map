{"version":3,"sources":["webpack:///static/js/app.d69b1b46daaba3a86a48.js","webpack:///./src/main.js","webpack:///VueGoogleAutocomplete.vue","webpack:///App.vue","webpack:///./~/vue-google-autocomplete/src/VueGoogleAutocomplete.vue","webpack:///./src/App.vue","webpack:///./~/vue-google-autocomplete/src/VueGoogleAutocomplete.vue?456a"],"names":["webpackJsonp","0","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_keys","_keys2","_vue","_vue2","_App","_vueGoogleAutocomplete","_vueGoogleAutocomplete2","_axios","_axios2","el","components","VueGoogleAutocomplete","data","location","address","formatted_address","geocode","lat","long","weather","temperature","wind","desc","icon","mounted","this","$refs","focus","methods","getAddressData","addressData","placeResultData","id","updateGeocode","latitude","longitude","lookupWeather","loc","length","clearWeather","_this","api_link","create","baseURL","window","origin","responseType","headers","Access-Control-Allow-Origin","Access-Control-Allow-Headers","Content-Type","dataType","get","then","response","forcast","currently","Math","floor","windSpeed","summary","toLowerCase","catch","error","console","log","formatDesc","str","arguments","undefined","replace","letter","toUpperCase","weatherIcon","36","Object","defineProperty","value","name","props","type","String","required","classname","placeholder","types","country","Array","enableGeolocation","Boolean","autocomplete","autocompleteText","watch","newVal","oldVal","$emit","options","componentRestrictions","google","maps","places","Autocomplete","document","getElementById","addListener","place","getPlace","geometry","addressComponents","street_number","route","locality","administrative_area_level_1","postal_code","returnData","address_components","i","addressType","val","lng","onChange","onFocus","geolocate","onBlur","onKeyPress","event","clear","blur","update","_this2","navigator","geolocation","getCurrentPosition","position","coords","circle","Circle","center","radius","accuracy","setBounds","getBounds","37","65","68","Component","69","70","render","_vm","_h","$createElement","_c","_self","directives","rawName","expression","ref","class","attrs","domProps","on","$event","change","keypress","input","target","composing","staticRenderFns"],"mappings":"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","file":"static/js/app.d69b1b46daaba3a86a48.js","sourcesContent":["webpackJsonp([2,0],{\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _keys = __webpack_require__(38);\n\t\n\tvar _keys2 = _interopRequireDefault(_keys);\n\t\n\tvar _vue = __webpack_require__(71);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(69);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _vueGoogleAutocomplete = __webpack_require__(68);\n\t\n\tvar _vueGoogleAutocomplete2 = _interopRequireDefault(_vueGoogleAutocomplete);\n\t\n\tvar _axios = __webpack_require__(18);\n\t\n\tvar _axios2 = _interopRequireDefault(_axios);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tnew _vue2.default({\n\t  el: '#app',\n\t  components: { VueGoogleAutocomplete: _vueGoogleAutocomplete2.default },\n\t  data: {\n\t    location: '',\n\t    address: '',\n\t    formatted_address: '',\n\t\n\t    geocode: {\n\t      lat: '',\n\t      long: ''\n\t    },\n\t\n\t    weather: {\n\t      temperature: '',\n\t      wind: '',\n\t      desc: '',\n\t      icon: ''\n\t    }\n\t  },\n\t\n\t  mounted: function mounted() {\n\t    this.$refs.address.focus();\n\t  },\n\t\n\t\n\t  methods: {\n\t    getAddressData: function getAddressData(addressData, placeResultData, id) {\n\t      this.location = addressData;\n\t      this.updateGeocode({ lat: addressData.latitude, long: addressData.longitude });\n\t      this.formatted_address = placeResultData.formatted_address;\n\t\n\t      this.lookupWeather();\n\t    },\n\t    updateGeocode: function updateGeocode(loc) {\n\t      if (!loc) {\n\t        this.geocode.lat = '';\n\t        this.geocode.long = '';\n\t      } else {\n\t        if ((0, _keys2.default)(loc).length > 1) {\n\t          if (loc.lat && loc.lat) {\n\t            this.geocode = loc;\n\t          }\n\t        }\n\t      }\n\t    },\n\t    clearWeather: function clearWeather() {\n\t      this.weather = {\n\t        temperature: '',\n\t        wind: '',\n\t        desc: '',\n\t        icon: ''\n\t      };\n\t    },\n\t    lookupWeather: function lookupWeather() {\n\t      var _this = this;\n\t\n\t      if (this.location && this.geocode.lat != '' && this.geocode.long != '') {\n\t        var api_link = 'https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/0137b8413801ea36e9b83161b6793a17/' + this.geocode.lat + ',' + this.geocode.long + '?exclude=minutely,hourly,daily,alerts';\n\t\n\t\n\t        _axios2.default.create({\n\t          baseURL: window.location.origin,\n\t          responseType: 'json',\n\t          headers: {\n\t            \"Access-Control-Allow-Origin\": \"*\",\n\t            \"Access-Control-Allow-Headers\": \"X-Requested-With, Content-Type\",\n\t            \"Content-Type\": \"application/json\",\n\t            \"dataType\": \"application/json\"\n\t          }\n\t        });\n\t        _axios2.default.get(api_link).then(function (response) {\n\t          var forcast = response.data.currently;\n\t          _this.weather.temperature = Math.floor(forcast.temperature);\n\t          _this.weather.wind = Math.floor(forcast.windSpeed);\n\t          _this.weather.desc = forcast.summary.toLowerCase();\n\t          _this.weather.icon = forcast.icon.toLowerCase();\n\t        }).catch(function (error) {\n\t          _this.clearWeather();\n\t          console.log(error);\n\t        });\n\t      }\n\t    },\n\t    formatDesc: function formatDesc() {\n\t      var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\t\n\t      if (str != '') {\n\t        str = str.toLowerCase().replace(/\\b[a-z]/g, function (letter) {\n\t          return letter.toUpperCase();\n\t        });\n\t      }\n\t      return str;\n\t    },\n\t    weatherIcon: function weatherIcon() {\n\t      switch (this.weather.icon) {\n\t        case 'clear-day':\n\t          return 'wi-day-sunny';\n\t        case 'clear-night':\n\t          return 'wi-night-clear';\n\t        case 'cloudy':\n\t        case 'partly-cloudy-day':\n\t          return 'wi-cloudy';\n\t        case 'partly-cloudy-night':\n\t          return 'wi-night-partly-cloudy';\n\t        case 'fog':\n\t          return 'wi-fog';\n\t        case 'rain':\n\t          return 'wi-rain';\n\t        case 'sleet':\n\t          return 'wi-sleet';\n\t        case 'snow':\n\t          return 'wi-snow';\n\t        case 'wind':\n\t          return 'wi-windy';\n\t        default:\n\t          return 'wi-na';\n\t          break;\n\t      }\n\t    }\n\t  }\n\t});\n\n/***/ }),\n\n/***/ 36:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  name: 'VueGoogleAutocomplete',\n\t\n\t  props: {\n\t    id: {\n\t      type: String,\n\t      required: true\n\t    },\n\t\n\t    classname: String,\n\t\n\t    placeholder: {\n\t      type: String,\n\t      default: 'Start typing'\n\t    },\n\t\n\t    types: {\n\t      type: String,\n\t      default: 'address'\n\t    },\n\t\n\t    country: {\n\t      type: [String, Array],\n\t      default: null\n\t    },\n\t\n\t    enableGeolocation: {\n\t      type: Boolean,\n\t      default: false\n\t    }\n\t  },\n\t\n\t  data: function data() {\n\t    return {\n\t      autocomplete: null,\n\t\n\t      autocompleteText: ''\n\t    };\n\t  },\n\t\n\t  watch: {\n\t    autocompleteText: function autocompleteText(newVal, oldVal) {\n\t      this.$emit('inputChange', { newVal: newVal, oldVal: oldVal });\n\t    }\n\t  },\n\t\n\t  mounted: function mounted() {\n\t    var _this = this;\n\t\n\t    var options = {};\n\t\n\t    if (this.types) {\n\t      options.types = [this.types];\n\t    }\n\t\n\t    if (this.country) {\n\t      options.componentRestrictions = {\n\t        country: this.country\n\t      };\n\t    }\n\t\n\t    this.autocomplete = new google.maps.places.Autocomplete(document.getElementById(this.id), options);\n\t\n\t    this.autocomplete.addListener('place_changed', function () {\n\t\n\t      var place = _this.autocomplete.getPlace();\n\t\n\t      if (!place.geometry) {\n\t        _this.$emit('no-results-found', place);\n\t        return;\n\t      }\n\t\n\t      var addressComponents = {\n\t        street_number: 'short_name',\n\t        route: 'long_name',\n\t        locality: 'long_name',\n\t        administrative_area_level_1: 'short_name',\n\t        country: 'long_name',\n\t        postal_code: 'short_name'\n\t      };\n\t\n\t      var returnData = {};\n\t\n\t      if (place.address_components !== undefined) {\n\t        for (var i = 0; i < place.address_components.length; i++) {\n\t          var addressType = place.address_components[i].types[0];\n\t\n\t          if (addressComponents[addressType]) {\n\t            var val = place.address_components[i][addressComponents[addressType]];\n\t            returnData[addressType] = val;\n\t          }\n\t        }\n\t\n\t        returnData['latitude'] = place.geometry.location.lat();\n\t        returnData['longitude'] = place.geometry.location.lng();\n\t\n\t        _this.$emit('placechanged', returnData, place, _this.id);\n\t\n\t        _this.autocompleteText = document.getElementById(_this.id).value;\n\t        _this.onChange();\n\t      }\n\t    });\n\t  },\n\t\n\t  methods: {\n\t    onFocus: function onFocus() {\n\t      this.geolocate();\n\t      this.$emit('focus');\n\t    },\n\t    onBlur: function onBlur() {\n\t      this.$emit('blur');\n\t    },\n\t    onChange: function onChange() {\n\t      this.$emit('change', this.autocompleteText);\n\t    },\n\t    onKeyPress: function onKeyPress(event) {\n\t      this.$emit('keypress', event);\n\t    },\n\t    clear: function clear() {\n\t      this.autocompleteText = '';\n\t    },\n\t    focus: function focus() {\n\t      this.$refs.autocomplete.focus();\n\t    },\n\t    blur: function blur() {\n\t      this.$refs.autocomplete.blur();\n\t    },\n\t    update: function update(value) {\n\t      this.autocompleteText = value;\n\t    },\n\t    geolocate: function geolocate() {\n\t      var _this2 = this;\n\t\n\t      if (this.enableGeolocation) {\n\t        if (navigator.geolocation) {\n\t          navigator.geolocation.getCurrentPosition(function (position) {\n\t            var geolocation = {\n\t              lat: position.coords.latitude,\n\t              lng: position.coords.longitude\n\t            };\n\t            var circle = new google.maps.Circle({\n\t              center: geolocation,\n\t              radius: position.coords.accuracy\n\t            });\n\t            _this2.autocomplete.setBounds(circle.getBounds());\n\t          });\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ }),\n\n/***/ 37:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  name: 'app'\n\t};\n\n/***/ }),\n\n/***/ 65:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 68:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Component = __webpack_require__(17)(\n\t  /* script */\n\t  __webpack_require__(36),\n\t  /* template */\n\t  __webpack_require__(70),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 69:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(65)\n\t\n\tvar Component = __webpack_require__(17)(\n\t  /* script */\n\t  __webpack_require__(37),\n\t  /* template */\n\t  null,\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 70:\n/***/ (function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('input', {\n\t    directives: [{\n\t      name: \"model\",\n\t      rawName: \"v-model\",\n\t      value: (_vm.autocompleteText),\n\t      expression: \"autocompleteText\"\n\t    }],\n\t    ref: \"autocomplete\",\n\t    class: _vm.classname,\n\t    attrs: {\n\t      \"type\": \"text\",\n\t      \"id\": _vm.id,\n\t      \"placeholder\": _vm.placeholder\n\t    },\n\t    domProps: {\n\t      \"value\": (_vm.autocompleteText)\n\t    },\n\t    on: {\n\t      \"focus\": function($event) {\n\t        _vm.onFocus()\n\t      },\n\t      \"blur\": function($event) {\n\t        _vm.onBlur()\n\t      },\n\t      \"change\": _vm.onChange,\n\t      \"keypress\": _vm.onKeyPress,\n\t      \"input\": function($event) {\n\t        if ($event.target.composing) { return; }\n\t        _vm.autocompleteText = $event.target.value\n\t      }\n\t    }\n\t  })\n\t},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/app.d69b1b46daaba3a86a48.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue';\nimport App from './App';\nimport VueGoogleAutocomplete from 'vue-google-autocomplete';\nimport axios from 'axios';\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  components: { VueGoogleAutocomplete },\n  data: {\n    location: '',\n    address: '',\n    formatted_address: '',\n\n    // GeoCode based on the google city results\n    geocode: {\n      lat: '',\n      long: ''\n    },\n    // current cities listed weather\n    weather: {\n      temperature: '',\n      wind: '',\n      desc: '',\n      icon: ''\n    }\n  },\n\n  mounted() {\n    // To demonstrate functionality of exposed component functions\n    // Here we make focus on the user input\n    this.$refs.address.focus();\n  },\n\n  methods: {\n    /**\n    * When the location found\n    * @param {Object} addressData Data of the found location\n    * @param {Object} placeResultData PlaceResult object\n    * @param {String} id Input container ID\n    */\n    getAddressData: function (addressData, placeResultData, id) {\n      this.location = addressData;\n      this.updateGeocode({lat: addressData.latitude, long: addressData.longitude})\n      this.formatted_address = placeResultData.formatted_address;\n\n      this.lookupWeather();\n    },\n    updateGeocode(loc){\n      if(!loc){\n        this.geocode.lat = '';\n        this.geocode.long = '';\n      }else{\n        // Verify that a 2 valid value keeys, latitude & longitude are supplied\n        if(Object.keys(loc).length > 1){\n          if((loc.lat) && (loc.lat)){\n            this.geocode = loc\n            // console.log(this.geocode);\n          }\n        }\n      }\n    },\n\n    clearWeather(){\n      this.weather = {\n        temperature: '',\n        wind: '',\n        desc: '',\n        icon: ''\n      }\n    },\n    lookupWeather(){\n      // verify the specified location exists, with valid latitude/longitude values\n      if(this.location &&\n        (this.geocode.lat != '') && (this.geocode.long != '')){\n\n        // let api_link = `http://api.openweathermap.org/data/2.5/weather?lat=${this.geocode.lat}&lon=${this.geocode.long}&units=imperial&appid=cfaa2c01a61cbbef0ffa75e68bd33666`\n        // let api_link = `https://api.darksky.net/forecast/0137b8413801ea36e9b83161b6793a17/${this.geocode.lat},${this.geocode.long}?exclude=minutely,hourly,daily,alerts`\n        // https://forum.freecodecamp.org/t/cross-domain-error-i-thought-im-using-jsonp-so-whats-wrong/11012/6\n        // cords-anywhere is used an https proxy: https://forum.freecodecamp.org/t/solved-having-trouble-getting-response-from-dark-sky-api/100653/4\n        // let api_link = `https://cors.io/?https://api.darksky.net/forecast/0137b8413801ea36e9b83161b6793a17/${this.geocode.lat},${this.geocode.long}?exclude=minutely,hourly,daily,alerts`\n        // Alternative PROXY links to get around CORS errors\n        let api_link = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/0137b8413801ea36e9b83161b6793a17/${this.geocode.lat},${this.geocode.long}?exclude=minutely,hourly,daily,alerts`\n        //let api_link = `https://jsonp.afeld.me/?callback=myCallback&url=https://api.darksky.net/forecast/0137b8413801ea36e9b83161b6793a17/${this.geocode.lat},${this.geocode.long}?exclude=minutely,hourly,daily,alerts`\n\n        axios.create({\n          baseURL: window.location.origin,\n          responseType: 'json',\n          headers:{\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"X-Requested-With, Content-Type\",\n            \"Content-Type\":\"application/json\",\n            \"dataType\":\"application/json\"\n          }\n        })\n        axios.get(api_link)\n        .then((response) => {\n          let forcast = response.data.currently;\n          this.weather.temperature = Math.floor(forcast.temperature);\n          this.weather.wind = Math.floor(forcast.windSpeed);\n          this.weather.desc = forcast.summary.toLowerCase();\n          this.weather.icon = forcast.icon.toLowerCase();\n        })\n        .catch((error) => {\n          this.clearWeather();\n          console.log(error);\n        })\n      }\n    },\n\n    formatDesc(str=''){\n      if(str != ''){\n        str = str.toLowerCase().replace(/\\b[a-z]/g, function(letter) {\n          return letter.toUpperCase();\n        });\n      }\n      return str;\n    },\n\n    weatherIcon(){\n      switch (this.weather.icon){\n        case 'clear-day':\n          return 'wi-day-sunny'\n        case 'clear-night':\n          return 'wi-night-clear'\n        case 'cloudy':\n        case 'partly-cloudy-day':\n          return 'wi-cloudy'\n        case 'partly-cloudy-night':\n          return 'wi-night-partly-cloudy'\n        case 'fog':\n          return 'wi-fog'\n        case 'rain':\n          return 'wi-rain'\n        case 'sleet':\n          return 'wi-sleet'\n        case 'snow':\n          return 'wi-snow'\n        case 'wind':\n          return 'wi-windy'\n        default:\n          return 'wi-na';\n          break;\n      }\n    }\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","<template>\n    <input\n        ref=\"autocomplete\"\n        type=\"text\"\n        :class=\"classname\"\n        :id=\"id\"\n        :placeholder=\"placeholder\"\n        v-model=\"autocompleteText\"\n        @focus=\"onFocus()\"\n        @blur=\"onBlur()\"\n        @change=\"onChange\"\n        @keypress=\"onKeyPress\"\n    />\n</template>\n\n<script>\n    export default {\n        name: 'VueGoogleAutocomplete',\n\n        props: {\n          id: {\n            type: String,\n            required: true\n          },\n\n          classname: String,\n\n          placeholder: {\n            type: String,\n            default: 'Start typing'\n          },\n\n          types: {\n            type: String,\n            default: 'address'\n          },\n\n          country: {\n            type: [String, Array],\n            default: null\n          },\n\n          enableGeolocation: {\n            type: Boolean,\n            default: false\n          }\n        },\n\n        data: function () {\n            return {\n                /**\n                 * The Autocomplete object.\n                 *\n                 * @type {Autocomplete}\n                 * @link https://developers.google.com/maps/documentation/javascript/reference#Autocomplete\n                 */\n                autocomplete: null,\n\n                /**\n                 * Autocomplete input text\n                 * @type {String}\n                 */\n                autocompleteText: '',\n            }\n        },\n\n        watch: {\n            autocompleteText: function (newVal, oldVal) {\n\t            this.$emit('inputChange', { newVal, oldVal });\n            }\n        },\n\n        mounted: function() {\n          const options = {};\n\n          if (this.types) {\n            options.types = [this.types];\n          }\n\n          if (this.country) {\n            options.componentRestrictions = {\n              country: this.country\n            };\n          }\n\n          this.autocomplete = new google.maps.places.Autocomplete(\n                document.getElementById(this.id),\n                options\n            );\n\n          this.autocomplete.addListener('place_changed', () => {\n\n                let place = this.autocomplete.getPlace();\n\n                if (!place.geometry) {\n                  // User entered the name of a Place that was not suggested and\n                  // pressed the Enter key, or the Place Details request failed.\n                  this.$emit('no-results-found', place);\n                  return;\n                }\n\n                let addressComponents = {\n                    street_number: 'short_name',\n                    route: 'long_name',\n                    locality: 'long_name',\n                    administrative_area_level_1: 'short_name',\n                    country: 'long_name',\n                    postal_code: 'short_name'\n                };\n\n                let returnData = {};\n\n                if (place.address_components !== undefined) {\n                    // Get each component of the address from the place details\n                    for (let i = 0; i < place.address_components.length; i++) {\n                      let addressType = place.address_components[i].types[0];\n\n                      if (addressComponents[addressType]) {\n                        let val = place.address_components[i][addressComponents[addressType]];\n                            returnData[addressType] = val;\n                      }\n                    }\n\n                    returnData['latitude'] = place.geometry.location.lat();\n                    returnData['longitude'] = place.geometry.location.lng();\n\n                    // return returnData object and PlaceResult object\n                    this.$emit('placechanged', returnData, place, this.id);\n\n                    // update autocompleteText then emit change event\n                    this.autocompleteText = document.getElementById(this.id).value\n                    this.onChange()\n                }\n           });\n        },\n\n        methods: {\n            /**\n             * When the input gets focus\n             */\n            onFocus() {\n              this.geolocate();\n              this.$emit('focus');\n            },\n\n            /**\n             * When the input loses focus\n             */\n            onBlur() {\n              this.$emit('blur');\n            },\n\n            /**\n             * When the input got changed\n             */\n            onChange() {\n              this.$emit('change', this.autocompleteText);\n            },\n\n            /**\n             * When a key gets pressed\n             * @param  {Event} event A keypress event\n             */\n            onKeyPress(event) {\n              this.$emit('keypress', event);\n            },\n\n            /**\n             * Clear the input\n             */\n            clear() {\n              this.autocompleteText = ''\n            },\n\n            /**\n             * Focus the input\n             */\n            focus() {\n              this.$refs.autocomplete.focus()\n            },\n\n            /**\n             * Blur the input\n             */\n            blur() {\n              this.$refs.autocomplete.blur()\n            },\n\n            /**\n             * Update the value of the input\n             * @param  {String} value\n             */\n            update (value) {\n              this.autocompleteText = value\n            },\n\n            // Bias the autocomplete object to the user's geographical location,\n            // as supplied by the browser's 'navigator.geolocation' object.\n            geolocate() {\n                if (this.enableGeolocation) {\n                    if (navigator.geolocation) {\n                      navigator.geolocation.getCurrentPosition(position => {\n                        let geolocation = {\n                          lat: position.coords.latitude,\n                          lng: position.coords.longitude\n                        };\n                        let circle = new google.maps.Circle({\n                          center: geolocation,\n                          radius: position.coords.accuracy\n                        });\n                        this.autocomplete.setBounds(circle.getBounds());\n                      });\n                    }\n                }\n            }\n        }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// VueGoogleAutocomplete.vue?a165e56e","<script>\nexport default {\n  name: 'app',\n}\n</script>\n\n<style>\n/* Attributes */\nbody{\n  background-color: #D2ECF9;\n  /*background: url('/static/photo-1428940253195-53483a1de2e6.jpeg') no-repeat center center fixed;*/\n  background: url('/static/photo-1466854076813-4aa9ac0fc347.jpeg') no-repeat center center fixed;\n  background-size: cover;\n  color:#2c3e50 !important;\n\n\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  font-weight: 500;\n  padding: 50px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\na, a:active, a:visited{\n  color: #00ffd4;\n}\n\n/* Elements/Layout */\n#app {\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n.ts{\n  text-shadow: 0 1px 2px rgba(0,0,0,.25);\n}\n\nh3{ color: #797979 !important; }\n\n.weatherIcon{\n  font-size: 40px;\n  display: inline-block;\n  font-family: 'weathericons';\n  font-style: normal;\n  font-weight: normal;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  float: left;\n  margin-right: 15px;\n  margin-bottom: 15px;\n  min-width: 54px;\n  text-align: center;\n  /* color: #B80257; */\n  /* color: #fee856; */\n  color: #028bb8;\n}\n.intro-icons {\n  font-size: 15px;\n  color: #B80257;\n  text-align: center;\n}\np{ color: #2c3e50; }\nfooter, footer>p, .details p, small{\n  font-weight: 700;\n}\n.container{\n  min-height:100% !important;\n  background: rgba(255, 255, 255, .85);\n  border-radius: 7px;\n  padding: 1.5em;\n  color: #a7a7a7 !important;\n}\nfooter{\n  padding: 5em 0;\n  position: absolute;\n  bottom: 0;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// App.vue?0323520a","var Component = require(\"!../../vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../vue-loader/lib/selector?type=script&index=0!./VueGoogleAutocomplete.vue\"),\n  /* template */\n  require(\"!!../../vue-loader/lib/template-compiler?id=data-v-07190d32!../../vue-loader/lib/selector?type=template&index=0!./VueGoogleAutocomplete.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-google-autocomplete/src/VueGoogleAutocomplete.vue\n// module id = 68\n// module chunks = 2","\n/* styles */\nrequire(\"!!../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../node_modules/vue-loader/lib/style-rewriter?id=data-v-6c057f71!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n\nvar Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"),\n  /* template */\n  null,\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 69\n// module chunks = 2","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.autocompleteText),\n      expression: \"autocompleteText\"\n    }],\n    ref: \"autocomplete\",\n    class: _vm.classname,\n    attrs: {\n      \"type\": \"text\",\n      \"id\": _vm.id,\n      \"placeholder\": _vm.placeholder\n    },\n    domProps: {\n      \"value\": (_vm.autocompleteText)\n    },\n    on: {\n      \"focus\": function($event) {\n        _vm.onFocus()\n      },\n      \"blur\": function($event) {\n        _vm.onBlur()\n      },\n      \"change\": _vm.onChange,\n      \"keypress\": _vm.onKeyPress,\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.autocompleteText = $event.target.value\n      }\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-07190d32!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-google-autocomplete/src/VueGoogleAutocomplete.vue\n// module id = 70\n// module chunks = 2"],"sourceRoot":""}